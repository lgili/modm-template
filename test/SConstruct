# Copyright (c) 2023 Luiz Carlos Gili
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.



import os
from os.path import join, abspath

env = DefaultEnvironment(tools=[], ENV=os.environ)
env["CONFIG_PROJECT_NAME"] = "test"
env["CONFIG_BUILD_BASE"] = abspath(".")
env["CONFIG_ARTIFACT_PATH"] = abspath("../../../test/artifacts")
generated_paths = ['./modm', './mcal-test']

# Building all libraries
libraries = env.SConscript(dirs=generated_paths, exports="env")
env.Alias("library", libraries)

env.Append(CPPPATH=abspath("."))

sources = []
# Finding application sources
sources += env.FindSourceFiles(".")

# So you want to add or remove compile options?
#   0. Check what options you want to add to GCC:
#      https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html
#   1. Check what the environment variables are called in SCons:
#      https://www.scons.org/doc/latest/HTML/scons-user/apa.html
#   2. You can append one or multiple options like this
#       env.Append(CCFLAGS="-pedantic")
#       env.Append(CCFLAGS=["-pedantic", "-pedantic-errors"])
#   3. If you need to remove options, you need to do this:
#       env["CCFLAGS"].remove("-pedantic")
#      Note that a lot of options also have a "-no-{option}" option
#      that may overwrite previous options.
#   4. Add your environment changes below these instructions
#      inside this SConstruct file.
#   5. COMMIT THIS SCONSTRUCT FILE NOW!
#   6. Tell lbuild not to overwrite this SConstruct file anymore:
#       <option name="modm:build:scons:include_sconstruct">False</option>
#   7. Anyone using your project now also benefits from your environment changes.

env.BuildTarget(sources)